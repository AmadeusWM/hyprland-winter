;;  Music Widgets

;;  Music
(defwidget music-side []
  (box
    :halign "fill"
    :class "music-side"
    :space-evenly "false"
    (box
      :class "left-music-container"
      :orientation "v"
      :valign "center"
      :space-evenly "false"
      (music)
      (music_prog)
    )
    (music_ctl)
    (sidebar_audio)
  )
)


(defwidget music []
  (box :orientation "v" :space-evenly "false" :vexpand "false" :hexpand "false"
    (box :orientation "v" :spacing 5 :space-evenly "false" :vexpand "false" :hexpand "false" :class "msc_bg"
      (box
        :class "album_art"
        :style "background-image: url('${cover_art}');")
      (label :halign "start" :class "song" :wrap "false" :limit-width 12 :text song)
      (label :halign "start" :class "song_artist" :wrap "true" :limit-width 15 :text song_artist)
    )))
    
    (defwidget music_ctl []
      (box :orientation "v" :spacing 1 :halign "center" :space-evenly "true" :vexpand "false" :hexpand "false" :class "msc_ctl_bg"
    (button :class "song_btn_prev" :onclick "scripts/music previous" "")
    (button :class "song_btn_play" :onclick "scripts/music toggle" playpause)
    (button :class "song_btn_next" :onclick "scripts/music next" "")
    ; (button :class "song_btn_loop" :onclick "~/.config/eww/leftbar/scripts/music_info --loop" loop_status)
  ))

; onchange: with playerctl (position [OFFSET][+/-]  Command the player to go to the position or seek forward/backward OFFSET in seconds)
(defwidget music_prog []
    (box :class "music_prog_bg"
        (scale 
        :min 0 :max 101 
        :value song_perc 
        :onchange "scripts/music setposition {}"
        :width 280 :vexpand "false" :class "song_prog")))

(defwidget sidebar_audio []
    (box 
      :class "music_audio_container"
      :orientation "h" 
      :hexpand "true"
      :halign "fill"
      (box 
        :class "sidebar_volume_bar" 
        :orientation "v" 
        :space-evenly "false"
                        (scale 
                          :flipped "true" 
                          :orientation "v" 
                          :vexpand true
                          :min 0 
                          :max 101 
                          :value volume_percent 
                          :onchange "amixer -D pulse sset Master {}%" )
                        (label  
                          :text "墳" 
                          :vexpand false
                          :class "sidebar_vol_icon")
                      )
      (box 
        :class "sidebar_mic_bar" 
        :orientation "v" 
        :space-evenly "false"
                        (scale 
                          :flipped "true" 
                          :orientation "v" 
                          :vexpand true
                          :min 0 
                          :max 101 
                          :value mic_percent 
                          :onchange "amixer -D pulse sset Capture {}%")
                        (label  
                          :text "" 
                          :vexpand false
                          :class "sidebar_mic_icon"))
        (box 
        :class "sidebar_spotify_bar" 
        :orientation "v" 
        :space-evenly "false"
                        (scale 
                          :flipped "true" 
                          :orientation "v" 
                          :vexpand true
                          :min 0 
                          :max 101 
                          :value player_volume 
                          :onchange "scripts/music sp_volume {}")
                        (label  
                          :text "" 
                          :vexpand false
                          :class "sidebar_spotify_icon"))))